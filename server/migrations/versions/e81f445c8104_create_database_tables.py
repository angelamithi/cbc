"""create database tables

Revision ID: e81f445c8104
Revises: 
Create Date: 2024-07-15 16:17:13.760381

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e81f445c8104'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('schools',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('contact', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('terms',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('term_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tokenblocklist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tokenblocklist', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tokenblocklist_jti'), ['jti'], unique=False)

    op.create_table('years',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('year_name', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('categories',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('school_id', sa.String(), nullable=False),
    sa.Column('category_name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_categories_school_id_schools')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('designations',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('designation_name', sa.String(), nullable=True),
    sa.Column('designation_code', sa.Integer(), nullable=True),
    sa.Column('school_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_designations_school_id_schools')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('streams',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('school_id', sa.String(), nullable=False),
    sa.Column('stream_name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_streams_school_id_schools')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subjects',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('school_id', sa.String(), nullable=False),
    sa.Column('subject_name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_subjects_school_id_schools')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grades',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('school_id', sa.String(), nullable=False),
    sa.Column('grade', sa.String(), nullable=True),
    sa.Column('category_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_grades_category_id_categories')),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_grades_school_id_schools')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staffs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('school_id', sa.String(), nullable=False),
    sa.Column('payroll_number', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('alternative_contact', sa.String(), nullable=True),
    sa.Column('email_address', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('photo_url', sa.String(), nullable=True),
    sa.Column('designation_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['designation_id'], ['designations.id'], name=op.f('fk_staffs_designation_id_designations')),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_staffs_school_id_schools')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('departments',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('school_id', sa.String(), nullable=False),
    sa.Column('department_name', sa.String(), nullable=True),
    sa.Column('department_head', sa.String(), nullable=True),
    sa.Column('dept_staff', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['dept_staff'], ['staffs.id'], name=op.f('fk_departments_dept_staff_staffs')),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_departments_school_id_schools')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grade_stream_class_teacher',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('staff_id', sa.String(), nullable=False),
    sa.Column('grade_id', sa.String(), nullable=False),
    sa.Column('stream_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['grade_id'], ['grades.id'], name=op.f('fk_grade_stream_class_teacher_grade_id_grades')),
    sa.ForeignKeyConstraint(['staff_id'], ['staffs.id'], name=op.f('fk_grade_stream_class_teacher_staff_id_staffs')),
    sa.ForeignKeyConstraint(['stream_id'], ['streams.id'], name=op.f('fk_grade_stream_class_teacher_stream_id_streams')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('strands',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('strand_name', sa.String(), nullable=True),
    sa.Column('subject_id', sa.String(), nullable=False),
    sa.Column('grade_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['grade_id'], ['grades.id'], name=op.f('fk_strands_grade_id_grades')),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('fk_strands_subject_id_subjects')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('students',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('school_id', sa.String(), nullable=False),
    sa.Column('admission_number', sa.String(), nullable=False),
    sa.Column('joined_date', sa.Date(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('birth_certificate_number', sa.String(), nullable=True),
    sa.Column('photo_url', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('grade_id', sa.String(), nullable=False),
    sa.Column('stream_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['grade_id'], ['grades.id'], name=op.f('fk_students_grade_id_grades')),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_students_school_id_schools')),
    sa.ForeignKeyConstraint(['stream_id'], ['streams.id'], name=op.f('fk_students_stream_id_streams')),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('admission_number')
    )
    op.create_table('teacher_subject_grade_stream',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('staff_id', sa.String(), nullable=False),
    sa.Column('subject_id', sa.String(), nullable=False),
    sa.Column('grade_id', sa.String(), nullable=False),
    sa.Column('stream_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['grade_id'], ['grades.id'], name=op.f('fk_teacher_subject_grade_stream_grade_id_grades')),
    sa.ForeignKeyConstraint(['staff_id'], ['staffs.id'], name=op.f('fk_teacher_subject_grade_stream_staff_id_staffs')),
    sa.ForeignKeyConstraint(['stream_id'], ['streams.id'], name=op.f('fk_teacher_subject_grade_stream_stream_id_streams')),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('fk_teacher_subject_grade_stream_subject_id_subjects')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parents_details',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('school_id', sa.String(), nullable=False),
    sa.Column('mothers_first_name', sa.String(), nullable=True),
    sa.Column('mothers_last_name', sa.String(), nullable=True),
    sa.Column('mothers_contact', sa.String(), nullable=True),
    sa.Column('mothers_email', sa.String(), nullable=True),
    sa.Column('fathers_first_name', sa.String(), nullable=True),
    sa.Column('fathers_last_name', sa.String(), nullable=True),
    sa.Column('fathers_contact', sa.String(), nullable=True),
    sa.Column('fathers_email', sa.String(), nullable=True),
    sa.Column('guardian_first_name', sa.String(), nullable=True),
    sa.Column('guardian_last_name', sa.String(), nullable=True),
    sa.Column('guardian_contact', sa.String(), nullable=True),
    sa.Column('guardian_email', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('student_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_parents_details_school_id_schools')),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name=op.f('fk_parents_details_student_id_students')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('substrands',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('substrand_name', sa.String(), nullable=True),
    sa.Column('strand_id', sa.String(), nullable=False),
    sa.Column('subject_id', sa.String(), nullable=False),
    sa.Column('grade_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['grade_id'], ['grades.id'], name=op.f('fk_substrands_grade_id_grades')),
    sa.ForeignKeyConstraint(['strand_id'], ['strands.id'], name=op.f('fk_substrands_strand_id_strands')),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('fk_substrands_subject_id_subjects')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('learning_outcomes',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('learning_outcomes', sa.String(), nullable=True),
    sa.Column('grade_id', sa.String(), nullable=False),
    sa.Column('subject_id', sa.String(), nullable=False),
    sa.Column('strand_id', sa.String(), nullable=False),
    sa.Column('sub_strand_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['grade_id'], ['grades.id'], name=op.f('fk_learning_outcomes_grade_id_grades')),
    sa.ForeignKeyConstraint(['strand_id'], ['strands.id'], name=op.f('fk_learning_outcomes_strand_id_strands')),
    sa.ForeignKeyConstraint(['sub_strand_id'], ['substrands.id'], name=op.f('fk_learning_outcomes_sub_strand_id_substrands')),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('fk_learning_outcomes_subject_id_subjects')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assessment_rubics',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('assessment_rubics', sa.String(), nullable=True),
    sa.Column('assessment_rubic_mark', sa.Integer(), nullable=True),
    sa.Column('grade_id', sa.String(), nullable=False),
    sa.Column('subject_id', sa.String(), nullable=False),
    sa.Column('strand_id', sa.String(), nullable=False),
    sa.Column('sub_strand_id', sa.String(), nullable=False),
    sa.Column('learning_outcome_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['grade_id'], ['grades.id'], name=op.f('fk_assessment_rubics_grade_id_grades')),
    sa.ForeignKeyConstraint(['learning_outcome_id'], ['learning_outcomes.id'], name=op.f('fk_assessment_rubics_learning_outcome_id_learning_outcomes')),
    sa.ForeignKeyConstraint(['strand_id'], ['strands.id'], name=op.f('fk_assessment_rubics_strand_id_strands')),
    sa.ForeignKeyConstraint(['sub_strand_id'], ['substrands.id'], name=op.f('fk_assessment_rubics_sub_strand_id_substrands')),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('fk_assessment_rubics_subject_id_subjects')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('formative_reports',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('school_id', sa.String(), nullable=False),
    sa.Column('student_id', sa.String(), nullable=False),
    sa.Column('subject_id', sa.String(), nullable=False),
    sa.Column('grade_id', sa.String(), nullable=False),
    sa.Column('year_id', sa.String(), nullable=False),
    sa.Column('staff_id', sa.String(), nullable=False),
    sa.Column('stream_id', sa.String(), nullable=False),
    sa.Column('assessment_rubic_id', sa.String(), nullable=False),
    sa.Column('is_selected', sa.Boolean(), nullable=False),
    sa.Column('single_mark', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assessment_rubic_id'], ['assessment_rubics.id'], name=op.f('fk_formative_reports_assessment_rubic_id_assessment_rubics')),
    sa.ForeignKeyConstraint(['grade_id'], ['grades.id'], name=op.f('fk_formative_reports_grade_id_grades')),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_formative_reports_school_id_schools')),
    sa.ForeignKeyConstraint(['staff_id'], ['staffs.id'], name=op.f('fk_formative_reports_staff_id_staffs')),
    sa.ForeignKeyConstraint(['stream_id'], ['streams.id'], name=op.f('fk_formative_reports_stream_id_streams')),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name=op.f('fk_formative_reports_student_id_students')),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name=op.f('fk_formative_reports_subject_id_subjects')),
    sa.ForeignKeyConstraint(['year_id'], ['years.id'], name=op.f('fk_formative_reports_year_id_years')),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('formative_reports')
    op.drop_table('assessment_rubics')
    op.drop_table('learning_outcomes')
    op.drop_table('substrands')
    op.drop_table('parents_details')
    op.drop_table('teacher_subject_grade_stream')
    op.drop_table('students')
    op.drop_table('strands')
    op.drop_table('grade_stream_class_teacher')
    op.drop_table('departments')
    op.drop_table('staffs')
    op.drop_table('grades')
    op.drop_table('subjects')
    op.drop_table('streams')
    op.drop_table('designations')
    op.drop_table('categories')
    op.drop_table('years')
    with op.batch_alter_table('tokenblocklist', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tokenblocklist_jti'))

    op.drop_table('tokenblocklist')
    op.drop_table('terms')
    op.drop_table('schools')
    # ### end Alembic commands ###
